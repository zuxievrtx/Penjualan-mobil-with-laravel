Berikut adalah kode migration Laravel berdasarkan ERD yang telah dibuat sebelumnya:

```php
<?php
// create_products_table.php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('products', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->decimal('price', 10, 2);
            $table->integer('stock');
            $table->string('barcode')->unique();
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('products');
    }
};

// create_customers_table.php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('customers', function (Blueprint $table) {
            $table->id();
            $table->string('email')->unique();
            $table->string('password');
            $table->string('full_name');
            $table->string('country');
            $table->string('phone');
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('customers');
    }
};

// create_orders_table.php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('orders', function (Blueprint $table) {
            $table->id();
            $table->foreignId('customer_id')->constrained()->onDelete('cascade');
            $table->text('order_address');
            $table->string('order_email');
            $table->timestamp('order_date')->useCurrent();
            $table->string('order_status');
            $table->decimal('total_amount', 10, 2);
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('orders');
    }
};

// create_order_details_table.php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('order_details', function (Blueprint $table) {
            $table->id();
            $table->foreignId('order_id')->constrained()->onDelete('cascade');
            $table->foreignId('product_id')->constrained()->onDelete('cascade');
            $table->integer('quantity');
            $table->decimal('price', 10, 2);
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('order_details');
    }
};
```

Dan berikut adalah Model-model dengan relasi yang sesuai:

```php
<?php
// app/Models/Product.php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Product extends Model
{
    protected $fillable = [
        'name',
        'price',
        'stock',
        'barcode'
    ];

    public function orderDetails()
    {
        return $this->hasMany(OrderDetail::class);
    }
}

// app/Models/Customer.php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Customer extends Model
{
    protected $fillable = [
        'email',
        'password',
        'full_name',
        'country',
        'phone'
    ];

    protected $hidden = [
        'password'
    ];

    public function orders()
    {
        return $this->hasMany(Order::class);
    }
}

// app/Models/Order.php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Order extends Model
{
    protected $fillable = [
        'customer_id',
        'order_address',
        'order_email',
        'order_date',
        'order_status',
        'total_amount'
    ];

    public function customer()
    {
        return $this->belongsTo(Customer::class);
    }

    public function orderDetails()
    {
        return $this->hasMany(OrderDetail::class);
    }

    public function products()
    {
        return $this->belongsToMany(Product::class, 'order_details')
            ->withPivot('quantity', 'price')
            ->withTimestamps();
    }
}

// app/Models/OrderDetail.php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class OrderDetail extends Model
{
    protected $fillable = [
        'order_id',
        'product_id',
        'quantity',
        'price'
    ];

    public function order()
    {
        return $this->belongsTo(Order::class);
    }

    public function product()
    {
        return $this->belongsTo(Product::class);
    }
}
```

Beberapa penjelasan penting:

1. Migration:
- Menggunakan timestamps() untuk created_at dan updated_at
- Menggunakan foreign key constraints dengan onDelete('cascade')
- Menggunakan tipe data yang sesuai (decimal untuk harga, text untuk alamat, dll)

2. Model Relations:
- Product memiliki many OrderDetails
- Customer memiliki many Orders
- Order belongs to Customer dan memiliki many OrderDetails
- Order memiliki many Products melalui OrderDetails (many-to-many)
- OrderDetail belongs to Order dan Product

3. Fitur tambahan:
- Protected fillable untuk mass assignment
- Protected hidden untuk menyembunyikan password
- Pivot attributes untuk relasi many-to-many

Untuk menjalankan migration:
```bash
php artisan migrate
```

Untuk membuat migration baru:
```bash
php artisan make:migration create_products_table
php artisan make:migration create_customers_table
php artisan make:migration create_orders_table
php artisan make:migration create_order_details_table
```

Pastikan untuk menjalankan migration secara berurutan karena ada foreign key constraints.